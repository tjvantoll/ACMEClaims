//-------------------------------------------------------------------------
// <Auto-generated file - do not modify!>
//
// This code was generated automatically by Kinvey Studio.
//
// Changes to this file may cause undesired behavior and will be lost
// the next time the code regenerates.
//
// You can write your custom code in the home.component.tns.ts file instead.
// Find more information on https://devcenter.kinvey.com/guides/studio-extension-points.
//-------------------------------------------------------------------------
import { Component, Injector } from '@angular/core';
import { isIOS } from 'tns-core-modules/ui/page';
import { GestureTypes, SwipeDirection, SwipeGestureEventData } from 'tns-core-modules/ui/gestures';
import { ActivatedRoute } from '@angular/router';
import { map } from 'rxjs/operators';

import { NavigationService } from '@src/app/core/services/navigation.service';
import { UtilsService } from '@src/app/core/services/utils.service';
import { DataServiceFactory } from '@src/app/core/data/data-service.factory';
import { KinveyServiceConfig } from '@src/app/core/data/kinvey-service-config';

abstract class CustomEventHandlers {}

@Component({
    templateUrl: './home.component.html',
    styleUrls: ['./home.component.css']
})
export abstract class HomeViewBaseComponent extends CustomEventHandlers {
    public $config = {};

    protected $activatedRoute: ActivatedRoute;
    protected $navigationService: NavigationService;
    protected $utilsService: UtilsService;
    protected $serviceFactory: DataServiceFactory;

    constructor(public injector: Injector) {
        super();

        this.$activatedRoute = injector.get(ActivatedRoute);
        this.$navigationService = injector.get(NavigationService);
        this.$utilsService = injector.get(UtilsService);
        this.$serviceFactory = injector.get(DataServiceFactory);

        const dataConfig = {};

        this.initDataServices(dataConfig);
    }

    onViewLoaded({ object: view }) {
        view.on(GestureTypes.swipe, ({ direction }: SwipeGestureEventData) => {
            if (direction === SwipeDirection.right && !isIOS) {
                this.$navigationService.goBack(this.$activatedRoute);
                return;
            }
        });
    }

    protected initDataServices(dataConfig: { [key: string]: KinveyServiceConfig }) {}
}
